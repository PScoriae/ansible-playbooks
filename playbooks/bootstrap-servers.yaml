# TODO
# install hugo via prebuilt binaries
# install aws cli

- name: Setup 2GB swapfile for all servers
  hosts: all
  become: true
  vars:
    swap_file_path: /swapfile
    swap_file_size_mb: 2000
  tasks:
    - name: Create swap file
      command:
        dd if=/dev/zero of={{ swap_file_path }} bs=1M count={{ swap_file_size_mb }}
        creates="{{ swap_file_path }}"
      tags:
        - swap.file.create

    - name: Change swap file permissions
      file: path="{{ swap_file_path }}"
        owner=root
        group=root
        mode=0600
      tags:
        - swap.file.permissions

    - name: "Check swap file type"
      command: file {{ swap_file_path }}
      register: swapfile
      tags:
        - swap.file.mkswap
      changed_when: false

    - name: Make swap file
      command: "mkswap {{ swap_file_path }}"
      when: swapfile.stdout.find('swap file') == -1
      tags:
        - swap.file.mkswap

    - name: Write swap entry in fstab
      ansible.posix.mount: name=none
        src={{ swap_file_path }}
        fstype=swap
        opts=sw
        passno=0
        dump=0
        state=present
      tags:
        - swap.fstab

    - name: Mount swap
      command: "swapon {{ swap_file_path }}"
      when: ansible_swaptotal_mb < 1
      tags:
        - swap.file.swapon

- name: Bootstrap packages for all servers
  hosts: all
  become: true
  tasks:
    - name: Install list of packages
      ansible.builtin.dnf:
        name:
          - nano
          - nginx
          - git
          - nodejs
          - python3-pip
          - wget
          - unzip
        state: present
    - name: Install necessary python packages
      pip:
        name:
          - requests
          - docker
          - docker-compose

- name: Install Docker-CE
  hosts: all
  become: true
  tasks:
    - name: Install dnf-utils
      ansible.builtin.dnf:
        name: dnf-utils
        state: present
    - name: Add DNF config
      command: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      changed_when: false
    - name: Install Docker and its deps
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
    - name: Enable and start docker service
      systemd:
        name: docker
        enabled: true
        state: started

- name: Bind host folder as database volume for all servers
  hosts: all
  become: true
  tasks:
    - name: MongoDB volume
      ansible.builtin.file:
        path: /home/rocky/shuttleday-volume
        state: directory
        mode: "777"
    - name: Postgres volume
      ansible.builtin.file:
        path: /home/rocky/postgres-sq
        state: directory
        mode: "777"

- name: Add CICD server Docker insecure registry
  hosts: all
  become: true
  tasks:
    - name: Copy file over
      ansible.builtin.copy:
        src: ../config-files/daemon.json
        dest: /etc/docker/daemon.json
        mode: "444"

- name: Copy .pem key over to CICD server
  hosts: cicd
  become: true
  tasks:
    - name: Copy config file over
      ansible.builtin.copy:
        src: ../config-files/ssh-config
        dest: ~/.ssh/config
        mode: "444"
    - name: Copy key over
      ansible.builtin.copy:
        src: ../config-files/main-key.pem
        dest: ~/.ssh/main-key.pem
        mode: "600"

- name: Install pnpm for cicd servers
  hosts: cicd
  become: true
  tasks:
    - name: Install pnpm
      community.general.npm:
        name: pnpm
        global: true
        state: present

- name: Setup and configure Jenkins
  hosts: cicd
  become: true
  tasks:
    - name: Add jenkins repo
      ansible.builtin.get_url:
        url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo
        mode: "777"
    - name: Import key file from jenkins-ci to make installable
      rpm_key:
        key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key
        state: present
    - name: Install jenkins and java
      ansible.builtin.dnf:
        name:
          - jenkins
          - java-11-openjdk
        state: present
    - name: Add a line to a file if the file does not exist, without passing regexp
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: "jenkins ALL=(ALL) NOPASSWD: ALL"
        state: present
        mode: "440"
    - name: Enable and start jenkins service
      systemd:
        name: jenkins
        enabled: true
        state: started

- name: Install Ansible on CICD servers
  hosts: cicd
  become: true
  tasks:
    - name: Install Ansible
      pip:
        name:
          - ansible
      vars:
        ansible_python_interpreter: /usr/bin/python3.9

- name: Bootstrap monitoring services on CICD servers
  hosts: cicd
  become: true
  vars:
    prometheus_filepath: /home/rocky/monitoring/prometheus.yml
  tasks:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /home/rocky/monitoring
        state: directory
        mode: "0755"

    - name: Create prometheus.yml
      ansible.builtin.copy:
        src: ../config-files/prometheus.yml
        dest: "{{ prometheus_filepath }}"
        mode: "444"

    - name: Copy docker-compose.yml
      ansible.builtin.copy:
        src: ../config-files/cicd-server/docker-compose-monitoring.yml
        dest: /home/rocky/monitoring/docker-compose.yml
        mode: "777"

    - name: Pull and Deploy latest Docker Images
      community.docker.docker_compose:
        project_src: /home/rocky/monitoring
        state: present
        pull: true
        project_name: monitoring

- name: Bootstrap Sonarqube on CICD server
  hosts: cicd
  become: true
  tasks:
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /home/rocky/sonarqube
        state: directory
        mode: "0755"

    - name: Copy docker-compose-.yml
      ansible.builtin.copy:
        src: ../config-files/cicd-server/docker-compose-sonarqube.yml
        dest: /home/rocky/sonarqube/docker-compose.yml
        mode: "777"

    - name: Pull and Deploy latest Docker Images
      community.docker.docker_compose:
        project_src: /home/rocky/sonarqube
        state: present
        pull: true
        project_name: sonarqube

# - name: Bootstrap Monitoring services on Web servers
#   hosts: web
#   become: true
#   tasks:
#     - name: Create a monitoring directory if it does not exist
#       ansible.builtin.file:
#         path: /home/rocky/monitoring
#         state: directory
#         mode: "0755"

#     - name: Copy docker-compose.yml
#       ansible.builtin.copy:
#         src: ../config-files/web-server/docker-compose.yml
#         dest: /home/rocky/monitoring/docker-compose.yml
#         mode: "777"

#     - name: Pull and Deploy latest Docker Images
#       community.docker.docker_compose:
#         project_src: /home/rocky/monitoring
#         state: present
#         pull: true
#         project_name: monitoring

- name: Setup Docker registry
  hosts: cicd
  become: true
  tasks:
    - name: Run Docker registry
      community.docker.docker_container:
        name: registry
        image: registry:2
        state: started
        pull: true
        restart_policy: always
        ports:
          - "5000:5000"

- name: Configure Nginx Reverse Proxies
  hosts: cicd
  become: true
  tasks:
    - name: Set Jenkins Reverse Proxy
      ansible.builtin.copy:
        src: ../config-files/jenkins.conf
        dest: /etc/nginx/conf.d/jenkins.conf
        mode: "400"

    - name: Set Prometheus Reverse Proxy
      ansible.builtin.copy:
        src: ../config-files/prometheus.conf
        dest: /etc/nginx/conf.d/prometheus.conf
        mode: "400"

    - name: Set Grafana Reverse Proxy
      ansible.builtin.copy:
        src: ../config-files/grafana.conf
        dest: /etc/nginx/conf.d/grafana.conf
        mode: "400"

    - name: Set Shuttleday API Reverse Proxy
      ansible.builtin.copy:
        src: ../config-files/shuttleday.conf
        dest: /etc/nginx/conf.d/shuttleday.conf
        mode: "400"

    - name: Set Sonarqube Reverse Proxy
      ansible.builtin.copy:
        src: ../config-files/sonarqube.conf
        dest: /etc/nginx/conf.d/sonarqube.conf
        mode: "400"

    - name: Enable and start nginx service
      systemd:
        name: nginx
        enabled: true
        state: restarted

# - name: Configure Nginx Reverse Proxies for PCPartsTool
#   hosts: web
#   become: true
#   tasks:
#     - name: Set PCPartsTool Reverse Proxy
#       ansible.builtin.copy:
#         src: ../config-files/pcpartstool.conf
#         dest: /etc/nginx/conf.d/pcpartstool.conf
#         mode: "400"

#     - name: Enable and start nginx service
#       systemd:
#         name: nginx
#         enabled: true
#         state: restarted

- name: Ensure SELinux is set to enforcing mode
  hosts: all
  become: true
  tasks:
    - name: Change SELINUX to permissive
      ansible.builtin.lineinfile:
        path: /etc/selinux/config
        regexp: "^SELINUX="
        line: SELINUX=permissive

- name: Unconditionally reboot the machine with all defaults
  hosts: all
  become: true
  tasks:
    - name: Reboot server
      ansible.builtin.reboot:
